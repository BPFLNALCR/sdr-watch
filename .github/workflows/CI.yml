name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
  workflow_dispatch:

jobs:
  lint-test:
    name: Lint & Smoke Tests (Python)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: System packages (SDR & build tools)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libusb-1.0-0-dev \
            librtlsdr-dev rtl-sdr soapysdr-tools

      - name: Python deps
        run: |
          python -m pip install -U pip setuptools wheel
          # Core runtime deps (aligns with Pi install, but OK on CI)
          python -m pip install numpy scipy flask pyrtlsdr rich
          # Dev tools
          python -m pip install flake8 mypy

      - name: Lint (flake8)
        run: flake8 .
        continue-on-error: true  # keep CI green while you iterate

      - name: Type check (mypy)
        run: mypy .
        continue-on-error: true  # optional at this stage

      - name: Smoke tests (imports & --help)
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
          # Basic import checks for core libs your scripts rely on
          import numpy, scipy, flask
          from rtlsdr import RtlSdr
          print("Imports OK")
          PY

          # Ensure scripts parse and --help works (no hardware needed)
          if [ -f "sdrwatch.py" ]; then
            python sdrwatch.py --help > /dev/null
            echo "sdrwatch.py --help OK"
          fi
          if [ -f "sdrwatch-control.py" ]; then
            python sdrwatch-control.py --help > /dev/null
            echo "sdrwatch-control.py --help OK"
          fi
          # Support both names for the web script
          if [ -f "sdrwatch-web-simple.py" ]; then
            python sdrwatch-web-simple.py --help > /dev/null || true
            echo "sdrwatch-web-simple.py --help OK"
          fi
          if [ -f "sdrwatch_web_simple.py" ]; then
            python sdrwatch_web_simple.py --help > /dev/null || true
            echo "sdrwatch_web_simple.py --help OK"
          fi
